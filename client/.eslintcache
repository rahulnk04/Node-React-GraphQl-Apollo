[{"C:\\Users\\rahnayak\\Desktop\\Projects\\node_react_graphql_apollo\\client\\src\\App.js":"1","C:\\Users\\rahnayak\\Desktop\\Projects\\node_react_graphql_apollo\\client\\src\\Components\\GetUsers.js":"2"},{"size":806,"mtime":1652269017739,"results":"3","hashOfConfig":"4"},{"size":586,"mtime":1652269258321,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"g42tx0",{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\rahnayak\\Desktop\\Projects\\node_react_graphql_apollo\\client\\src\\App.js",["11"],"C:\\Users\\rahnayak\\Desktop\\Projects\\node_react_graphql_apollo\\client\\src\\Components\\GetUsers.js",["12","13","14"],"import React, { useEffect, useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { LOAD_USERS } from \"../GraphQL/Queries\";\n\nfunction GetUsers() {\n  const { error, loading, data } = useQuery(LOAD_USERS);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    if (data) {\n      setUsers(data.getAllUsers);\n    }\n  }, [data]);\n\n  return (\n    <div>\n      {\" \"}\n      {users.map((val, i) => {\n        return (\n          <div key={i}>\n            {i + 1}. {val.firstName}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default GetUsers;\n",{"ruleId":"15","severity":1,"message":"16","line":15,"column":53,"nodeType":"17","messageId":"18","endLine":15,"endColumn":55},{"ruleId":"19","severity":1,"message":"20","line":2,"column":20,"nodeType":"21","messageId":"22","endLine":2,"endColumn":23},{"ruleId":"19","severity":1,"message":"23","line":6,"column":11,"nodeType":"21","messageId":"22","endLine":6,"endColumn":16},{"ruleId":"19","severity":1,"message":"24","line":6,"column":18,"nodeType":"21","messageId":"22","endLine":6,"endColumn":25},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'loading' is assigned a value but never used."]